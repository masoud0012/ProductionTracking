// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OA.Repo.Troual;

namespace OA.Repo.Troual.Migrations
{
    [DbContext(typeof(TouralContext))]
    [Migration("20210425184937_update-entity453")]
    partial class updateentity453
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole<long>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ActionsEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 275, DateTimeKind.Local).AddTicks(8514));

                    b.Property<long>("ControllerEntityID")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ControllerEntityID");

                    b.ToTable("ActionsEntities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ActionName = "GetById",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(3787),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 2L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4560),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف تکی"
                        },
                        new
                        {
                            Id = 3L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4578),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 4L,
                            ActionName = "GetUsers",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4583),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "مشاهده همه کاربران"
                        },
                        new
                        {
                            Id = 5L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4587),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد کردن"
                        },
                        new
                        {
                            Id = 6L,
                            ActionName = "Active",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4596),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 7L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4600),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 8L,
                            ActionName = "ChangePassword",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4604),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "تغییر پسورد"
                        },
                        new
                        {
                            Id = 9L,
                            ActionName = "Login",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4608),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 10L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(4613),
                            ControllerEntityID = 2L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 11L,
                            ActionName = "GetById",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(9294),
                            ControllerEntityID = 1L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 12L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(9319),
                            ControllerEntityID = 1L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 13L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(9324),
                            ControllerEntityID = 1L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 14L,
                            ActionName = "GetRoles",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(9327),
                            ControllerEntityID = 1L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 15L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 283, DateTimeKind.Local).AddTicks(9331),
                            ControllerEntityID = 1L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 16L,
                            ActionName = "GetAll",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4849),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 17L,
                            ActionName = "GetById",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4872),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 18L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4877),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف"
                        },
                        new
                        {
                            Id = 19L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4880),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 20L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4884),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 21L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4890),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 22L,
                            ActionName = "PrintExcel",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4894),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت گزارش اکسل"
                        },
                        new
                        {
                            Id = 23L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4898),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 24L,
                            ActionName = "RunJob",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(4901),
                            ControllerEntityID = 4L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 25L,
                            ActionName = "GetAll",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(9427),
                            ControllerEntityID = 3L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 26L,
                            ActionName = "GetById",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(9450),
                            ControllerEntityID = 3L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 27L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(9454),
                            ControllerEntityID = 3L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف تکی"
                        },
                        new
                        {
                            Id = 28L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(9458),
                            ControllerEntityID = 3L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 29L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(9462),
                            ControllerEntityID = 3L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 30L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(9469),
                            ControllerEntityID = 3L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 31L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 284, DateTimeKind.Local).AddTicks(9472),
                            ControllerEntityID = 3L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 32L,
                            ActionName = "InsertToStack",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 285, DateTimeKind.Local).AddTicks(4514),
                            ControllerEntityID = 5L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "اضافه کردن خروجی تکراری"
                        },
                        new
                        {
                            Id = 33L,
                            ActionName = "GetById",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 285, DateTimeKind.Local).AddTicks(4536),
                            ControllerEntityID = 5L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 34L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 285, DateTimeKind.Local).AddTicks(4541),
                            ControllerEntityID = 5L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف تکی"
                        },
                        new
                        {
                            Id = 35L,
                            ActionName = "InsertToBalance",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 285, DateTimeKind.Local).AddTicks(4544),
                            ControllerEntityID = 5L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد خروجی جدید"
                        },
                        new
                        {
                            Id = 36L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 285, DateTimeKind.Local).AddTicks(4548),
                            ControllerEntityID = 5L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 37L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 285, DateTimeKind.Local).AddTicks(4555),
                            ControllerEntityID = 5L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 38L,
                            ActionName = "InsertWastage",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 285, DateTimeKind.Local).AddTicks(4558),
                            ControllerEntityID = 5L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 39L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 285, DateTimeKind.Local).AddTicks(4562),
                            ControllerEntityID = 5L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 40L,
                            ActionName = "GetAll",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(360),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 41L,
                            ActionName = "GetChildsByParents",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(385),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت مقادیر پایه"
                        },
                        new
                        {
                            Id = 42L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(389),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف تکی"
                        },
                        new
                        {
                            Id = 43L,
                            ActionName = "GetParentCodes",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(393),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت مقادیر پدر"
                        },
                        new
                        {
                            Id = 44L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(397),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 45L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(403),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 46L,
                            ActionName = "GetGeneralParamsByCode",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(407),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت بر اساس کد"
                        },
                        new
                        {
                            Id = 47L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(420),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 48L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(423),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 49L,
                            ActionName = "GetGeneralParameterByID",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(428),
                            ControllerEntityID = 6L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 50L,
                            ActionName = "GetAll",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9028),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 51L,
                            ActionName = "EditBalanceStock",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9054),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 52L,
                            ActionName = "GetBalanceByID",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9059),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 53L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9063),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف تکی"
                        },
                        new
                        {
                            Id = 54L,
                            ActionName = "GetQuantityStock",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9066),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت  ظرفیت انبار"
                        },
                        new
                        {
                            Id = 55L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9073),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 56L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9077),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 57L,
                            ActionName = "SearchAutoComplete",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9081),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 58L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9084),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 59L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9089),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 60L,
                            ActionName = "SearchAutoCompleteExceptIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9093),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 61L,
                            ActionName = "SearchFinalProducts",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9097),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو محصولات نهایی"
                        },
                        new
                        {
                            Id = 62L,
                            ActionName = "PrintExcel",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9100),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت  اکسل محصولات نهایی"
                        },
                        new
                        {
                            Id = 213L,
                            ActionName = "GetWastage",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9104),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "مشاهده لیست ضایعات"
                        },
                        new
                        {
                            Id = 214L,
                            ActionName = "PrintWastage",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9107),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت فایل اکسل ضایعات"
                        },
                        new
                        {
                            Id = 215L,
                            ActionName = "SearchWastage",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9111),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "  مشاهده ضایعات"
                        },
                        new
                        {
                            Id = 216L,
                            ActionName = "PrintWastageExcel",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 286, DateTimeKind.Local).AddTicks(9114),
                            ControllerEntityID = 7L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت اکسل ضایعات"
                        },
                        new
                        {
                            Id = 63L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(1674),
                            ControllerEntityID = 8L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 64L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(1697),
                            ControllerEntityID = 8L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 65L,
                            ActionName = "GetAll",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8332),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 66L,
                            ActionName = "InsertBalance",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8357),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = ""
                        },
                        new
                        {
                            Id = 67L,
                            ActionName = "Get",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8361),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 68L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8365),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف تکی"
                        },
                        new
                        {
                            Id = 69L,
                            ActionName = "EditBalance",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8369),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 70L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8377),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 71L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8390),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 72L,
                            ActionName = "GetUserContractors",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8394),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 73L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8398),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 74L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8402),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 75L,
                            ActionName = "GetProcessProducts",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8406),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 76L,
                            ActionName = "RollBackProcess",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 287, DateTimeKind.Local).AddTicks(8409),
                            ControllerEntityID = 9L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 77L,
                            ActionName = "Get",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(2582),
                            ControllerEntityID = 10L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 78L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(2606),
                            ControllerEntityID = 10L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف"
                        },
                        new
                        {
                            Id = 79L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(2610),
                            ControllerEntityID = 10L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 80L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(2614),
                            ControllerEntityID = 10L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 81L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(2617),
                            ControllerEntityID = 10L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 82L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(2625),
                            ControllerEntityID = 10L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 83L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(7361),
                            ControllerEntityID = 12L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 84L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(7385),
                            ControllerEntityID = 12L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 85L,
                            ActionName = "GetAll",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(7389),
                            ControllerEntityID = 12L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 86L,
                            ActionName = "Get",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(7393),
                            ControllerEntityID = 12L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 87L,
                            ActionName = "RemoveByIds",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(7396),
                            ControllerEntityID = 12L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف گروهی"
                        },
                        new
                        {
                            Id = 88L,
                            ActionName = "Search",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(7404),
                            ControllerEntityID = 12L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "جستجو"
                        },
                        new
                        {
                            Id = 89L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 288, DateTimeKind.Local).AddTicks(7407),
                            ControllerEntityID = 12L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف تکی"
                        },
                        new
                        {
                            Id = 90L,
                            ActionName = "Get",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(682),
                            ControllerEntityID = 11L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L
                        },
                        new
                        {
                            Id = 91L,
                            ActionName = "Remove",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(705),
                            ControllerEntityID = 11L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "حذف تکی"
                        },
                        new
                        {
                            Id = 92L,
                            ActionName = "Edit",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(710),
                            ControllerEntityID = 11L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ویرایش"
                        },
                        new
                        {
                            Id = 93L,
                            ActionName = "Insert",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(713),
                            ControllerEntityID = 11L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "ایجاد"
                        },
                        new
                        {
                            Id = 94L,
                            ActionName = "GetControls",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(4708),
                            ControllerEntityID = 14L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "مشاهده صفحه دسترسی"
                        },
                        new
                        {
                            Id = 95L,
                            ActionName = "GetActions",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(4732),
                            ControllerEntityID = 14L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "مشاهده عملیات"
                        },
                        new
                        {
                            Id = 96L,
                            ActionName = "GetControlsUserGrants",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(4736),
                            ControllerEntityID = 14L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "مشاهده دسترسی داده شده عملیات"
                        },
                        new
                        {
                            Id = 97L,
                            ActionName = "GetActionsUserGrants",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(4740),
                            ControllerEntityID = 14L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "مشاهده دسترسی داده شده"
                        },
                        new
                        {
                            Id = 98L,
                            ActionName = "SetGrantToUser",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(4744),
                            ControllerEntityID = 14L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "اعمال دسترسی"
                        },
                        new
                        {
                            Id = 217L,
                            ActionName = "SearchWastage",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(7268),
                            ControllerEntityID = 15L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "  مشاهده ضایعات"
                        },
                        new
                        {
                            Id = 218L,
                            ActionName = "PrintWastageExcel",
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 289, DateTimeKind.Local).AddTicks(7290),
                            ControllerEntityID = 15L,
                            CreatedById = 1L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleFr = "دریافت اکسل ضایعات"
                        });
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ActionsRoleEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActionsEntityID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActionsEntityID");

                    b.HasIndex("RoleEntityID");

                    b.ToTable("ActionsRoleEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ActionsUserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ActionsEntityID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActionsEntityID");

                    b.HasIndex("UserEntityID");

                    b.ToTable("ActionsUserEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ControllerEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 274, DateTimeKind.Local).AddTicks(3118));

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleFr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ControllerEntities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "AdminRole",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "Role",
                            TitleFr = "مدیریت نقش ها"
                        },
                        new
                        {
                            Id = 2L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "AdminUser",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "User",
                            TitleFr = "مدیریت کاربران"
                        },
                        new
                        {
                            Id = 3L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "CostCategory",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "CostCategory",
                            TitleFr = "مدیریت سرفصل هزینه ها"
                        },
                        new
                        {
                            Id = 4L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "Cost",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "Cost",
                            TitleFr = "مدیریت هزینه ها"
                        },
                        new
                        {
                            Id = 5L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "FlowProcess",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "FlowProcess",
                            TitleFr = "مدیریت خروجی فرایند"
                        },
                        new
                        {
                            Id = 6L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "GeneralParamter",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "GeneralParameter",
                            TitleFr = "دسته بندی"
                        },
                        new
                        {
                            Id = 7L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "InitialBalance",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "InitialBalance",
                            TitleFr = "مدیریت  مواد اولیه"
                        },
                        new
                        {
                            Id = 8L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "ProcessBalance",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "ProcessBalance",
                            TitleFr = "مدیریت محصولات اولیه فرایند"
                        },
                        new
                        {
                            Id = 9L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "Process",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "Process",
                            TitleFr = "مدیریت فرایند"
                        },
                        new
                        {
                            Id = 10L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "ProcessDefinition",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "Process Definition",
                            TitleFr = "مدیریت نوع فرایند"
                        },
                        new
                        {
                            Id = 11L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "StockBalance",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "Stock Balance",
                            TitleFr = "مدیریت انبار خروجی فرایند"
                        },
                        new
                        {
                            Id = 12L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "StockRoom",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "Stock Room",
                            TitleFr = "مدیریت انبار"
                        },
                        new
                        {
                            Id = 14L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "Controlls",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "Permission User",
                            TitleFr = "مدیریت دسترسی کاربر"
                        },
                        new
                        {
                            Id = 15L,
                            AddedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ControllerName = "Wasstage",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            TitleEn = "Wasstage",
                            TitleFr = "مدیریت ضایعات"
                        });
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ControllerRoleEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ControllerEntityID")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoleEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ControllerEntityID");

                    b.HasIndex("RoleEntityID");

                    b.ToTable("ControllerRoleEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ControllerUserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ControllerEntityID")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ControllerEntityID");

                    b.HasIndex("UserEntityID");

                    b.ToTable("ControllerUserEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.Cost.CostCategoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 267, DateTimeKind.Local).AddTicks(5499));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CostCategoryEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.Cost.CostEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 268, DateTimeKind.Local).AddTicks(6126));

                    b.Property<DateTime>("CalculationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CostAmount")
                        .HasColumnType("bigint");

                    b.Property<long>("CostCategoryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CostDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("RemainingMonth")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CostCategoryID");

                    b.ToTable("CostEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.FlowProcess.FlowProcessEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("IsForeignWorker")
                        .HasColumnType("int");

                    b.Property<bool>("IsNewMaterial")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SumHours")
                        .HasColumnType("int");

                    b.Property<int>("SumLaborer")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("processEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("processEntityID");

                    b.ToTable("FlowProcessEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.FlowProcess.FlowProcessStockInitialEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<long>("FlowProcessEntityID")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("count")
                        .HasColumnType("bigint");

                    b.Property<long>("stockRoom_InitialBalanceEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FlowProcessEntityID");

                    b.HasIndex("stockRoom_InitialBalanceEntityID");

                    b.ToTable("flowProcessStockInitialEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.FlowProcess.FlowProcessUserSalaryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<long>("FlowProcessEntityID")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalaryPerDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryPerHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SumDays")
                        .HasColumnType("int");

                    b.Property<int>("SumHours")
                        .HasColumnType("int");

                    b.Property<int>("SumLaborer")
                        .HasColumnType("int");

                    b.Property<string>("TotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.Property<long>("processUserEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FlowProcessEntityID");

                    b.HasIndex("UserID");

                    b.HasIndex("processUserEntityID");

                    b.ToTable("FlowProcessUserSalaryEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.InitialBalance.GeneralParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ParentID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("GeneralParameters");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 279, DateTimeKind.Local).AddTicks(6880),
                            Code = "0001",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            Title = "واحد اندازه گیری"
                        },
                        new
                        {
                            Id = 2L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 280, DateTimeKind.Local).AddTicks(6235),
                            Code = "00010001",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 1L,
                            Title = "متر"
                        },
                        new
                        {
                            Id = 3L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 280, DateTimeKind.Local).AddTicks(6262),
                            Code = "00010002",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 1L,
                            Title = "کیلوگرم"
                        },
                        new
                        {
                            Id = 4L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 280, DateTimeKind.Local).AddTicks(6267),
                            Code = "00010003",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 1L,
                            Title = "تعداد"
                        },
                        new
                        {
                            Id = 13L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 281, DateTimeKind.Local).AddTicks(9080),
                            Code = "0005",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            Title = "حقوق و دستمزد"
                        },
                        new
                        {
                            Id = 14L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(893),
                            Code = "00050001",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 13L,
                            Title = "ساعتی"
                        },
                        new
                        {
                            Id = 15L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(990),
                            Code = "00050002",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 13L,
                            Title = "روزانه"
                        },
                        new
                        {
                            Id = 5L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1118),
                            Code = "0002",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            Title = "نوع موارد"
                        },
                        new
                        {
                            Id = 6L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1210),
                            Code = "00020001",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 5L,
                            Title = "اولیه"
                        },
                        new
                        {
                            Id = 7L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1215),
                            Code = "00020002",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 5L,
                            Title = "ثانویه"
                        },
                        new
                        {
                            Id = 8L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1285),
                            Code = "0003",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            Title = "دسته بندی"
                        },
                        new
                        {
                            Id = 9L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1368),
                            Code = "00030001",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 8L,
                            Title = "ساعتی"
                        },
                        new
                        {
                            Id = 10L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1417),
                            Code = "0004",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            Title = "نوع کارمند"
                        },
                        new
                        {
                            Id = 11L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1493),
                            Code = "00040001",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 10L,
                            Title = "رسمی"
                        },
                        new
                        {
                            Id = 12L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1505),
                            Code = "00040002",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 10L,
                            Title = "غیر رسمی"
                        },
                        new
                        {
                            Id = 16L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1567),
                            Code = "0006",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            Title = "نوع انجام فرایند"
                        },
                        new
                        {
                            Id = 17L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1644),
                            Code = "00060001",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 16L,
                            Title = "حواله پیمانکار"
                        },
                        new
                        {
                            Id = 18L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1649),
                            Code = "00060002",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 16L,
                            Title = "داخلی"
                        },
                        new
                        {
                            Id = 20L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1713),
                            Code = "0007",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            Title = "نوع خروجی جریان فرایند"
                        },
                        new
                        {
                            Id = 21L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1784),
                            Code = "00070001",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 20L,
                            Title = "خروجی تکراری"
                        },
                        new
                        {
                            Id = 22L,
                            AddedDate = new DateTime(2021, 4, 25, 11, 49, 29, 282, DateTimeKind.Local).AddTicks(1788),
                            Code = "00070002",
                            CreatedById = 0L,
                            IsEnabled = true,
                            ModifiedById = 0L,
                            ParentID = 20L,
                            Title = "خروجی جدید"
                        });
                });

            modelBuilder.Entity("OA.Data.Toural.InitialBalance.InitialBalanceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 227, DateTimeKind.Local).AddTicks(5780));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CategoryTypeFK_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PrevFlowPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBeforeCalculation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProposedPrice")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("TotalCostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCostPriceLog")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalUserCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("TypeMaterialFK_ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("UnitMeaurementFK_ID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("WeighProductInCalculation")
                        .HasPrecision(7, 5)
                        .HasColumnType("decimal(7,5)");

                    b.Property<long?>("flowProcessEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryTypeFK_ID");

                    b.HasIndex("TypeMaterialFK_ID");

                    b.HasIndex("UnitMeaurementFK_ID");

                    b.HasIndex("flowProcessEntityID")
                        .IsUnique()
                        .HasFilter("[flowProcessEntityID] IS NOT NULL");

                    b.ToTable("InitialBalanceEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.InitialBalance.WastageEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<long>("FlowProcessEntityID")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InitialBalanceEntityID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Replace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UnitMeaurementFK_ID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("FlowProcessEntityID");

                    b.HasIndex("InitialBalanceEntityID");

                    b.HasIndex("UnitMeaurementFK_ID");

                    b.ToTable("WastageEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.Job.CostJobEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("CostEntityID")
                        .HasColumnType("bigint");

                    b.Property<string>("JobEntityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MonthDuration")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CostEntityID");

                    b.HasIndex("JobEntityID");

                    b.ToTable("CostJobEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Job.InitialBalanceJobEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("InitialBalanceEntityID")
                        .HasColumnType("bigint");

                    b.Property<string>("JobEntityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceBeforeCalculation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPriceProducts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeightProductInCalculation")
                        .HasPrecision(7, 5)
                        .HasColumnType("decimal(7,5)");

                    b.HasKey("ID");

                    b.HasIndex("InitialBalanceEntityID");

                    b.HasIndex("JobEntityID");

                    b.ToTable("InitialBalanceJobEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Job.JobEntities", b =>
                {
                    b.Property<string>("JobEntityID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExecutedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 271, DateTimeKind.Local).AddTicks(8608));

                    b.Property<long>("TotalCost")
                        .HasColumnType("bigint");

                    b.Property<decimal>("WeighProductInCalculation")
                        .HasPrecision(7, 5)
                        .HasColumnType("decimal(7,5)");

                    b.Property<decimal>("WeightInCalculation")
                        .HasPrecision(7, 5)
                        .HasColumnType("decimal(7,5)");

                    b.HasKey("JobEntityID");

                    b.ToTable("JobEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.LogEntity.LogEntity", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCreated")
                        .HasColumnType("bit");

                    b.Property<string>("OperationTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("LogEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessBalanceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InitialBalanceID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("processEntityID")
                        .HasColumnType("bigint");

                    b.Property<long?>("stockRoom_InitialBalanceID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InitialBalanceID");

                    b.HasIndex("processEntityID");

                    b.HasIndex("stockRoom_InitialBalanceID");

                    b.ToTable("processBalanceEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessBalanceStockEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ProcessBalanceID")
                        .HasColumnType("bigint");

                    b.Property<long>("StockRoomID")
                        .HasColumnType("bigint");

                    b.Property<string>("TotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("processBalanceEntityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("stockRoom_InitialBalanceEntityId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("processBalanceEntityId");

                    b.HasIndex("stockRoom_InitialBalanceEntityId");

                    b.ToTable("ProcessBalanceStockEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessDefinitionEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProcessDefinitionEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContractorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ContractorTypeID")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinalStep")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("processDefinitionEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractorTypeID");

                    b.HasIndex("processDefinitionEntityID");

                    b.ToTable("processEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessUserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserID")
                        .HasColumnType("bigint");

                    b.Property<long?>("processEntityID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.HasIndex("processEntityID");

                    b.ToTable("processUserEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.StockRoom.StockRoomEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nVarchar(255)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("StockRoomEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.StockRoom.StockRoom_InitialBalanceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 263, DateTimeKind.Local).AddTicks(7864));

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<long>("CurrentCount")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InitialBalanceEntitiesFK_ID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PricePerUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StockRoom_InitialBalanceFK_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InitialBalanceEntitiesFK_ID");

                    b.HasIndex("StockRoom_InitialBalanceFK_ID");

                    b.ToTable("StockRoom_InitialBalances");
                });

            modelBuilder.Entity("OA.Data.Toural.TableInfo.TableInfoEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastInsertedCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tableInfoEntities");
                });

            modelBuilder.Entity("OA.Data.UserEntity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 216, DateTimeKind.Local).AddTicks(5826));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Duration")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("EmployeerTypeFK_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<long>("MaxWorkPerDay")
                        .HasColumnType("bigint");

                    b.Property<long>("MaxWorkPerHour")
                        .HasColumnType("bigint");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<long>("SalaryPerHour")
                        .HasColumnType("bigint");

                    b.Property<long>("SalaryPerMonth")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalaryTypeFK_ID")
                        .HasColumnType("bigint");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeerTypeFK_ID");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("SalaryTypeFK_ID");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("OA.Data.Toural.UserEntity.RoleEntity", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole<long>");

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 4, 25, 11, 49, 29, 265, DateTimeKind.Local).AddTicks(7789));

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("RoleEntity");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<long>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.HasOne("OA.Data.UserEntity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.HasOne("OA.Data.UserEntity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<long>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<long>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.UserEntity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.HasOne("OA.Data.UserEntity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ActionsEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.ControllersEntity.ControllerEntity", "ControllerEntity")
                        .WithMany("ActionsEntities")
                        .HasForeignKey("ControllerEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControllerEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ActionsRoleEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.ControllersEntity.ActionsEntity", "ActionsEntity")
                        .WithMany("ActionsRoleEntities")
                        .HasForeignKey("ActionsEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.Toural.UserEntity.RoleEntity", "RoleEntity")
                        .WithMany("ActionsRoleEntities")
                        .HasForeignKey("RoleEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionsEntity");

                    b.Navigation("RoleEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ActionsUserEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.ControllersEntity.ActionsEntity", "ActionsEntity")
                        .WithMany("ActionsUserEntities")
                        .HasForeignKey("ActionsEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.UserEntity.User", "UserEntity")
                        .WithMany("ActionsUserEntities")
                        .HasForeignKey("UserEntityID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ActionsEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ControllerRoleEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.ControllersEntity.ControllerEntity", "ControllerEntity")
                        .WithMany("ControllerRoleEntities")
                        .HasForeignKey("ControllerEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.Toural.UserEntity.RoleEntity", "RoleEntity")
                        .WithMany("ControllerRoleEntities")
                        .HasForeignKey("RoleEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ControllerEntity");

                    b.Navigation("RoleEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ControllerUserEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.ControllersEntity.ControllerEntity", "ControllerEntity")
                        .WithMany("ControllerUserEntities")
                        .HasForeignKey("ControllerEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.UserEntity.User", "UserEntity")
                        .WithMany("ControllerUserEntities")
                        .HasForeignKey("UserEntityID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ControllerEntity");

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.Cost.CostEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.Cost.CostCategoryEntity", "CostCategory")
                        .WithMany("costEntities")
                        .HasForeignKey("CostCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCategory");
                });

            modelBuilder.Entity("OA.Data.Toural.FlowProcess.FlowProcessEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.Process.ProcessEntity", "processEntity")
                        .WithMany("flowProcessEntities")
                        .HasForeignKey("processEntityID");

                    b.Navigation("processEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.FlowProcess.FlowProcessStockInitialEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.FlowProcess.FlowProcessEntity", "FlowProcessEntity")
                        .WithMany("flowPorcessStockInitialEntities")
                        .HasForeignKey("FlowProcessEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.Toural.StockRoom.StockRoom_InitialBalanceEntity", "stockRoom_InitialBalanceEntity")
                        .WithMany("flowPorcessStockInitialEntities")
                        .HasForeignKey("stockRoom_InitialBalanceEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowProcessEntity");

                    b.Navigation("stockRoom_InitialBalanceEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.FlowProcess.FlowProcessUserSalaryEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.FlowProcess.FlowProcessEntity", "FlowProcessEntity")
                        .WithMany("flowProcessUserSalaryEntities")
                        .HasForeignKey("FlowProcessEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.UserEntity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.Toural.Process.ProcessUserEntity", "processUserEntity")
                        .WithMany("flowProcessUserSalaryEntities")
                        .HasForeignKey("processUserEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowProcessEntity");

                    b.Navigation("processUserEntity");

                    b.Navigation("User");
                });

            modelBuilder.Entity("OA.Data.Toural.InitialBalance.GeneralParameter", b =>
                {
                    b.HasOne("OA.Data.Toural.InitialBalance.GeneralParameter", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentID");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("OA.Data.Toural.InitialBalance.InitialBalanceEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.InitialBalance.GeneralParameter", "CategoryType")
                        .WithMany("InitialBalance_CategoryTypes")
                        .HasForeignKey("CategoryTypeFK_ID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OA.Data.Toural.InitialBalance.GeneralParameter", "TypeMaterial")
                        .WithMany("InitialBalance_TypeMaterial")
                        .HasForeignKey("TypeMaterialFK_ID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OA.Data.Toural.InitialBalance.GeneralParameter", "UnitMeasurement")
                        .WithMany("InitialBalance_UnitMeasurement")
                        .HasForeignKey("UnitMeaurementFK_ID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OA.Data.Toural.FlowProcess.FlowProcessEntity", "flowProcessEntity")
                        .WithOne("InitialBalanceEntity")
                        .HasForeignKey("OA.Data.Toural.InitialBalance.InitialBalanceEntity", "flowProcessEntityID");

                    b.Navigation("CategoryType");

                    b.Navigation("flowProcessEntity");

                    b.Navigation("TypeMaterial");

                    b.Navigation("UnitMeasurement");
                });

            modelBuilder.Entity("OA.Data.Toural.InitialBalance.WastageEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.FlowProcess.FlowProcessEntity", "FlowProcessEntity")
                        .WithMany("wastageEntities")
                        .HasForeignKey("FlowProcessEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.Toural.InitialBalance.InitialBalanceEntity", "InitialBalanceEntity")
                        .WithMany("wastageEntities")
                        .HasForeignKey("InitialBalanceEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.Toural.InitialBalance.GeneralParameter", "UnitMeasurement")
                        .WithMany("wastageEntities")
                        .HasForeignKey("UnitMeaurementFK_ID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("FlowProcessEntity");

                    b.Navigation("InitialBalanceEntity");

                    b.Navigation("UnitMeasurement");
                });

            modelBuilder.Entity("OA.Data.Toural.Job.CostJobEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.Cost.CostEntity", "CostEntity")
                        .WithMany("CostJobEntities")
                        .HasForeignKey("CostEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.Toural.Job.JobEntities", "JobEntitiy")
                        .WithMany("CostJobEntities")
                        .HasForeignKey("JobEntityID");

                    b.Navigation("CostEntity");

                    b.Navigation("JobEntitiy");
                });

            modelBuilder.Entity("OA.Data.Toural.Job.InitialBalanceJobEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.InitialBalance.InitialBalanceEntity", "InitialBalanceEntity")
                        .WithMany("InitialBalanceJobEntities")
                        .HasForeignKey("InitialBalanceEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OA.Data.Toural.Job.JobEntities", "JobEntitiy")
                        .WithMany("InitialBalanceJobEntities")
                        .HasForeignKey("JobEntityID");

                    b.Navigation("InitialBalanceEntity");

                    b.Navigation("JobEntitiy");
                });

            modelBuilder.Entity("OA.Data.Toural.LogEntity.LogEntity", b =>
                {
                    b.HasOne("OA.Data.UserEntity.User", "User")
                        .WithMany("LogEntities")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessBalanceEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.InitialBalance.InitialBalanceEntity", "initialBalanceEntity")
                        .WithMany("processBalanceEntities")
                        .HasForeignKey("InitialBalanceID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OA.Data.Toural.Process.ProcessEntity", "processEntity")
                        .WithMany("processBalanceEntities")
                        .HasForeignKey("processEntityID");

                    b.HasOne("OA.Data.Toural.StockRoom.StockRoom_InitialBalanceEntity", "stockRoom_InitialBalanceEntity")
                        .WithMany("processBalanceEntities")
                        .HasForeignKey("stockRoom_InitialBalanceID");

                    b.Navigation("initialBalanceEntity");

                    b.Navigation("processEntity");

                    b.Navigation("stockRoom_InitialBalanceEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessBalanceStockEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.Process.ProcessBalanceEntity", "processBalanceEntity")
                        .WithMany("processBalanceStockEntities")
                        .HasForeignKey("processBalanceEntityId");

                    b.HasOne("OA.Data.Toural.StockRoom.StockRoom_InitialBalanceEntity", "stockRoom_InitialBalanceEntity")
                        .WithMany()
                        .HasForeignKey("stockRoom_InitialBalanceEntityId");

                    b.Navigation("processBalanceEntity");

                    b.Navigation("stockRoom_InitialBalanceEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.InitialBalance.GeneralParameter", "ContractorType")
                        .WithMany("Contractors")
                        .HasForeignKey("ContractorTypeID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OA.Data.Toural.Process.ProcessDefinitionEntity", "processDefinitionEntity")
                        .WithMany("ProcessEntities")
                        .HasForeignKey("processDefinitionEntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContractorType");

                    b.Navigation("processDefinitionEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessUserEntity", b =>
                {
                    b.HasOne("OA.Data.UserEntity.User", "user")
                        .WithMany("processUserEntities")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OA.Data.Toural.Process.ProcessEntity", "processEntity")
                        .WithMany("UserContractors")
                        .HasForeignKey("processEntityID");

                    b.Navigation("processEntity");

                    b.Navigation("user");
                });

            modelBuilder.Entity("OA.Data.Toural.StockRoom.StockRoom_InitialBalanceEntity", b =>
                {
                    b.HasOne("OA.Data.Toural.InitialBalance.InitialBalanceEntity", "InitialBalanceEntities")
                        .WithMany("StockRoom_InitialBalanceEntity")
                        .HasForeignKey("InitialBalanceEntitiesFK_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OA.Data.Toural.StockRoom.StockRoomEntity", "StockRoomEntities")
                        .WithMany("StockRoom_InitialBalanceEntity")
                        .HasForeignKey("StockRoom_InitialBalanceFK_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("InitialBalanceEntities");

                    b.Navigation("StockRoomEntities");
                });

            modelBuilder.Entity("OA.Data.UserEntity.User", b =>
                {
                    b.HasOne("OA.Data.Toural.InitialBalance.GeneralParameter", "EmployeerType")
                        .WithMany("Emplooyers")
                        .HasForeignKey("EmployeerTypeFK_ID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("OA.Data.Toural.InitialBalance.GeneralParameter", "SalaryType")
                        .WithMany("Emplooyers_Salary")
                        .HasForeignKey("SalaryTypeFK_ID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("EmployeerType");

                    b.Navigation("SalaryType");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ActionsEntity", b =>
                {
                    b.Navigation("ActionsRoleEntities");

                    b.Navigation("ActionsUserEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.ControllersEntity.ControllerEntity", b =>
                {
                    b.Navigation("ActionsEntities");

                    b.Navigation("ControllerRoleEntities");

                    b.Navigation("ControllerUserEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Cost.CostCategoryEntity", b =>
                {
                    b.Navigation("costEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Cost.CostEntity", b =>
                {
                    b.Navigation("CostJobEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.FlowProcess.FlowProcessEntity", b =>
                {
                    b.Navigation("flowPorcessStockInitialEntities");

                    b.Navigation("flowProcessUserSalaryEntities");

                    b.Navigation("InitialBalanceEntity");

                    b.Navigation("wastageEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.InitialBalance.GeneralParameter", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Contractors");

                    b.Navigation("Emplooyers");

                    b.Navigation("Emplooyers_Salary");

                    b.Navigation("InitialBalance_CategoryTypes");

                    b.Navigation("InitialBalance_TypeMaterial");

                    b.Navigation("InitialBalance_UnitMeasurement");

                    b.Navigation("wastageEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.InitialBalance.InitialBalanceEntity", b =>
                {
                    b.Navigation("InitialBalanceJobEntities");

                    b.Navigation("processBalanceEntities");

                    b.Navigation("StockRoom_InitialBalanceEntity");

                    b.Navigation("wastageEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Job.JobEntities", b =>
                {
                    b.Navigation("CostJobEntities");

                    b.Navigation("InitialBalanceJobEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessBalanceEntity", b =>
                {
                    b.Navigation("processBalanceStockEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessDefinitionEntity", b =>
                {
                    b.Navigation("ProcessEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessEntity", b =>
                {
                    b.Navigation("flowProcessEntities");

                    b.Navigation("processBalanceEntities");

                    b.Navigation("UserContractors");
                });

            modelBuilder.Entity("OA.Data.Toural.Process.ProcessUserEntity", b =>
                {
                    b.Navigation("flowProcessUserSalaryEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.StockRoom.StockRoomEntity", b =>
                {
                    b.Navigation("StockRoom_InitialBalanceEntity");
                });

            modelBuilder.Entity("OA.Data.Toural.StockRoom.StockRoom_InitialBalanceEntity", b =>
                {
                    b.Navigation("flowPorcessStockInitialEntities");

                    b.Navigation("processBalanceEntities");
                });

            modelBuilder.Entity("OA.Data.UserEntity.User", b =>
                {
                    b.Navigation("ActionsUserEntities");

                    b.Navigation("ControllerUserEntities");

                    b.Navigation("LogEntities");

                    b.Navigation("processUserEntities");
                });

            modelBuilder.Entity("OA.Data.Toural.UserEntity.RoleEntity", b =>
                {
                    b.Navigation("ActionsRoleEntities");

                    b.Navigation("ControllerRoleEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
